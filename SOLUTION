814c5723c21e7e90a3eae36c8df3c513


Kernel System Calls
-------------------
the command created a folder named: welcomeToDevOpsTheHardWay, and a file called "goodLuck"
The message inside the file is "There you go... tell me what I do..."
also the file runs the following operations:
Initializes its environment and memory + Loads necessary libraries.



Broken Symlink
-------------------
the problem here the symbolic link "latest-backup.obj" has been created on the current directory is a relative link to the backup file. 
When you move this link to the backups directory, the relative path in the symbolic link is still pointing to the original location relative to where it has been created, which can lead us to the link pointing to a non-existing file or an incorrect file.
To fix this, we must verify that the symbolic link is correctly updated or recreated to point to the latest backup file from its new location. 
this is how it is possible to correct the bug in that code:
open the ubuntu terminal
#!/bin/bash
# Create the backups directory if it doesn't exist
mkdir -p backups
# Create the daily backup file
FILENAME=backup-$(date +"%Y-%m-%d").obj
touch $FILENAME
echo "backup data..." >> $FILENAME
# Create or update the symbolic link in the backups directory with the absolute path
ln -sf $(pwd)/$FILENAME backups/latest-backup.obj



Binary Numbers
--------------
question 1:
111 = 7
100 = 4
10110 = 22

question 2:
0 to 255

question 3:
Representing −128:
absolute value binary: 001000000
convert the bits: 110111111
adding 1: 110111111 + 1 = 111000000
−128: 111000000

question 4:
method for converting 0.2 to 8-bit floating point
1. Convert to Binary:
0.2100.2_{10}0.210​ approximates to 0.001100110011...0.001100110011...0.001100110011....
2. Normalize the Number:
Normalize 0.001100110011...0.001100110011...0.001100110011... to 1.100110011×2−31.100110011 \times 2^{-3}1.100110011×2−3.
3. Sign Bit:
The number is positive, so S=0S = 0S=0.
4. Exponent:
Exponent n=−3n = -3n=−3.
Add bias: E=−3+7=4E = -3 + 7 = 4E=−3+7=4.
In binary, 4 is 010001000100.
5. Mantissa:
The fractional part after normalization is 100110011...100110011...100110011....
Take the first 3 bits: 100100100.
6. Combine All Parts:
Sign bit: 000
Exponent: 010001000100
Mantissa: 100100100
for summarize: the representation of 12.3 will be 01010100
